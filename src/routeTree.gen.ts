/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root';
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route';
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index';
import { Route as errorNotFoundRouteImport } from './routes/(error)/not-found';
import { Route as authLoginRouteImport } from './routes/(auth)/login';
import { Route as AuthenticatedUserAdminIndexRouteImport } from './routes/_authenticated/userAdmin/index';
import { Route as AuthenticatedTopProgressBarIndexRouteImport } from './routes/_authenticated/top-progress-bar/index';
import { Route as AuthenticatedThreeBuildIndexRouteImport } from './routes/_authenticated/threeBuild/index';
import { Route as AuthenticatedSystemConfigIndexRouteImport } from './routes/_authenticated/systemConfig/index';
import { Route as AuthenticatedPokemonIndexRouteImport } from './routes/_authenticated/pokemon/index';
import { Route as AuthenticatedFormIndexRouteImport } from './routes/_authenticated/form/index';
import { Route as AuthenticatedPokemonIdRouteImport } from './routes/_authenticated/pokemon/$id';
import { Route as AuthenticatedVisionMixinPage1IndexRouteImport } from './routes/_authenticated/visionMixin/page1/index';
import { Route as AuthenticatedSenseManagementPage1IndexRouteImport } from './routes/_authenticated/senseManagement/page1/index';
import { Route as AuthenticatedDataAnalysisPage1IndexRouteImport } from './routes/_authenticated/dataAnalysis/page1/index';

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any);
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any);
const errorNotFoundRoute = errorNotFoundRouteImport.update({
  id: '/(error)/not-found',
  path: '/not-found',
  getParentRoute: () => rootRouteImport,
} as any);
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any);
const AuthenticatedUserAdminIndexRoute =
  AuthenticatedUserAdminIndexRouteImport.update({
    id: '/userAdmin/',
    path: '/userAdmin/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);
const AuthenticatedTopProgressBarIndexRoute =
  AuthenticatedTopProgressBarIndexRouteImport.update({
    id: '/top-progress-bar/',
    path: '/top-progress-bar/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);
const AuthenticatedThreeBuildIndexRoute =
  AuthenticatedThreeBuildIndexRouteImport.update({
    id: '/threeBuild/',
    path: '/threeBuild/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);
const AuthenticatedSystemConfigIndexRoute =
  AuthenticatedSystemConfigIndexRouteImport.update({
    id: '/systemConfig/',
    path: '/systemConfig/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);
const AuthenticatedPokemonIndexRoute =
  AuthenticatedPokemonIndexRouteImport.update({
    id: '/pokemon/',
    path: '/pokemon/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);
const AuthenticatedFormIndexRoute = AuthenticatedFormIndexRouteImport.update({
  id: '/form/',
  path: '/form/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any);
const AuthenticatedPokemonIdRoute = AuthenticatedPokemonIdRouteImport.update({
  id: '/pokemon/$id',
  path: '/pokemon/$id',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any);
const AuthenticatedVisionMixinPage1IndexRoute =
  AuthenticatedVisionMixinPage1IndexRouteImport.update({
    id: '/visionMixin/page1/',
    path: '/visionMixin/page1/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);
const AuthenticatedSenseManagementPage1IndexRoute =
  AuthenticatedSenseManagementPage1IndexRouteImport.update({
    id: '/senseManagement/page1/',
    path: '/senseManagement/page1/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);
const AuthenticatedDataAnalysisPage1IndexRoute =
  AuthenticatedDataAnalysisPage1IndexRouteImport.update({
    id: '/dataAnalysis/page1/',
    path: '/dataAnalysis/page1/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);

export interface FileRoutesByFullPath {
  '/login': typeof authLoginRoute;
  '/not-found': typeof errorNotFoundRoute;
  '/': typeof AuthenticatedIndexRoute;
  '/pokemon/$id': typeof AuthenticatedPokemonIdRoute;
  '/form': typeof AuthenticatedFormIndexRoute;
  '/pokemon': typeof AuthenticatedPokemonIndexRoute;
  '/systemConfig': typeof AuthenticatedSystemConfigIndexRoute;
  '/threeBuild': typeof AuthenticatedThreeBuildIndexRoute;
  '/top-progress-bar': typeof AuthenticatedTopProgressBarIndexRoute;
  '/userAdmin': typeof AuthenticatedUserAdminIndexRoute;
  '/dataAnalysis/page1': typeof AuthenticatedDataAnalysisPage1IndexRoute;
  '/senseManagement/page1': typeof AuthenticatedSenseManagementPage1IndexRoute;
  '/visionMixin/page1': typeof AuthenticatedVisionMixinPage1IndexRoute;
}
export interface FileRoutesByTo {
  '/login': typeof authLoginRoute;
  '/not-found': typeof errorNotFoundRoute;
  '/': typeof AuthenticatedIndexRoute;
  '/pokemon/$id': typeof AuthenticatedPokemonIdRoute;
  '/form': typeof AuthenticatedFormIndexRoute;
  '/pokemon': typeof AuthenticatedPokemonIndexRoute;
  '/systemConfig': typeof AuthenticatedSystemConfigIndexRoute;
  '/threeBuild': typeof AuthenticatedThreeBuildIndexRoute;
  '/top-progress-bar': typeof AuthenticatedTopProgressBarIndexRoute;
  '/userAdmin': typeof AuthenticatedUserAdminIndexRoute;
  '/dataAnalysis/page1': typeof AuthenticatedDataAnalysisPage1IndexRoute;
  '/senseManagement/page1': typeof AuthenticatedSenseManagementPage1IndexRoute;
  '/visionMixin/page1': typeof AuthenticatedVisionMixinPage1IndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren;
  '/(auth)/login': typeof authLoginRoute;
  '/(error)/not-found': typeof errorNotFoundRoute;
  '/_authenticated/': typeof AuthenticatedIndexRoute;
  '/_authenticated/pokemon/$id': typeof AuthenticatedPokemonIdRoute;
  '/_authenticated/form/': typeof AuthenticatedFormIndexRoute;
  '/_authenticated/pokemon/': typeof AuthenticatedPokemonIndexRoute;
  '/_authenticated/systemConfig/': typeof AuthenticatedSystemConfigIndexRoute;
  '/_authenticated/threeBuild/': typeof AuthenticatedThreeBuildIndexRoute;
  '/_authenticated/top-progress-bar/': typeof AuthenticatedTopProgressBarIndexRoute;
  '/_authenticated/userAdmin/': typeof AuthenticatedUserAdminIndexRoute;
  '/_authenticated/dataAnalysis/page1/': typeof AuthenticatedDataAnalysisPage1IndexRoute;
  '/_authenticated/senseManagement/page1/': typeof AuthenticatedSenseManagementPage1IndexRoute;
  '/_authenticated/visionMixin/page1/': typeof AuthenticatedVisionMixinPage1IndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/login'
    | '/not-found'
    | '/'
    | '/pokemon/$id'
    | '/form'
    | '/pokemon'
    | '/systemConfig'
    | '/threeBuild'
    | '/top-progress-bar'
    | '/userAdmin'
    | '/dataAnalysis/page1'
    | '/senseManagement/page1'
    | '/visionMixin/page1';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/login'
    | '/not-found'
    | '/'
    | '/pokemon/$id'
    | '/form'
    | '/pokemon'
    | '/systemConfig'
    | '/threeBuild'
    | '/top-progress-bar'
    | '/userAdmin'
    | '/dataAnalysis/page1'
    | '/senseManagement/page1'
    | '/visionMixin/page1';
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/login'
    | '/(error)/not-found'
    | '/_authenticated/'
    | '/_authenticated/pokemon/$id'
    | '/_authenticated/form/'
    | '/_authenticated/pokemon/'
    | '/_authenticated/systemConfig/'
    | '/_authenticated/threeBuild/'
    | '/_authenticated/top-progress-bar/'
    | '/_authenticated/userAdmin/'
    | '/_authenticated/dataAnalysis/page1/'
    | '/_authenticated/senseManagement/page1/'
    | '/_authenticated/visionMixin/page1/';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren;
  authLoginRoute: typeof authLoginRoute;
  errorNotFoundRoute: typeof errorNotFoundRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AuthenticatedRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/_authenticated/': {
      id: '/_authenticated/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof AuthenticatedIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/(error)/not-found': {
      id: '/(error)/not-found';
      path: '/not-found';
      fullPath: '/not-found';
      preLoaderRoute: typeof errorNotFoundRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/(auth)/login': {
      id: '/(auth)/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof authLoginRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/_authenticated/userAdmin/': {
      id: '/_authenticated/userAdmin/';
      path: '/userAdmin';
      fullPath: '/userAdmin';
      preLoaderRoute: typeof AuthenticatedUserAdminIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/top-progress-bar/': {
      id: '/_authenticated/top-progress-bar/';
      path: '/top-progress-bar';
      fullPath: '/top-progress-bar';
      preLoaderRoute: typeof AuthenticatedTopProgressBarIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/threeBuild/': {
      id: '/_authenticated/threeBuild/';
      path: '/threeBuild';
      fullPath: '/threeBuild';
      preLoaderRoute: typeof AuthenticatedThreeBuildIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/systemConfig/': {
      id: '/_authenticated/systemConfig/';
      path: '/systemConfig';
      fullPath: '/systemConfig';
      preLoaderRoute: typeof AuthenticatedSystemConfigIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/pokemon/': {
      id: '/_authenticated/pokemon/';
      path: '/pokemon';
      fullPath: '/pokemon';
      preLoaderRoute: typeof AuthenticatedPokemonIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/form/': {
      id: '/_authenticated/form/';
      path: '/form';
      fullPath: '/form';
      preLoaderRoute: typeof AuthenticatedFormIndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/pokemon/$id': {
      id: '/_authenticated/pokemon/$id';
      path: '/pokemon/$id';
      fullPath: '/pokemon/$id';
      preLoaderRoute: typeof AuthenticatedPokemonIdRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/visionMixin/page1/': {
      id: '/_authenticated/visionMixin/page1/';
      path: '/visionMixin/page1';
      fullPath: '/visionMixin/page1';
      preLoaderRoute: typeof AuthenticatedVisionMixinPage1IndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/senseManagement/page1/': {
      id: '/_authenticated/senseManagement/page1/';
      path: '/senseManagement/page1';
      fullPath: '/senseManagement/page1';
      preLoaderRoute: typeof AuthenticatedSenseManagementPage1IndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
    '/_authenticated/dataAnalysis/page1/': {
      id: '/_authenticated/dataAnalysis/page1/';
      path: '/dataAnalysis/page1';
      fullPath: '/dataAnalysis/page1';
      preLoaderRoute: typeof AuthenticatedDataAnalysisPage1IndexRouteImport;
      parentRoute: typeof AuthenticatedRouteRoute;
    };
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute;
  AuthenticatedPokemonIdRoute: typeof AuthenticatedPokemonIdRoute;
  AuthenticatedFormIndexRoute: typeof AuthenticatedFormIndexRoute;
  AuthenticatedPokemonIndexRoute: typeof AuthenticatedPokemonIndexRoute;
  AuthenticatedSystemConfigIndexRoute: typeof AuthenticatedSystemConfigIndexRoute;
  AuthenticatedThreeBuildIndexRoute: typeof AuthenticatedThreeBuildIndexRoute;
  AuthenticatedTopProgressBarIndexRoute: typeof AuthenticatedTopProgressBarIndexRoute;
  AuthenticatedUserAdminIndexRoute: typeof AuthenticatedUserAdminIndexRoute;
  AuthenticatedDataAnalysisPage1IndexRoute: typeof AuthenticatedDataAnalysisPage1IndexRoute;
  AuthenticatedSenseManagementPage1IndexRoute: typeof AuthenticatedSenseManagementPage1IndexRoute;
  AuthenticatedVisionMixinPage1IndexRoute: typeof AuthenticatedVisionMixinPage1IndexRoute;
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedPokemonIdRoute: AuthenticatedPokemonIdRoute,
  AuthenticatedFormIndexRoute: AuthenticatedFormIndexRoute,
  AuthenticatedPokemonIndexRoute: AuthenticatedPokemonIndexRoute,
  AuthenticatedSystemConfigIndexRoute: AuthenticatedSystemConfigIndexRoute,
  AuthenticatedThreeBuildIndexRoute: AuthenticatedThreeBuildIndexRoute,
  AuthenticatedTopProgressBarIndexRoute: AuthenticatedTopProgressBarIndexRoute,
  AuthenticatedUserAdminIndexRoute: AuthenticatedUserAdminIndexRoute,
  AuthenticatedDataAnalysisPage1IndexRoute:
    AuthenticatedDataAnalysisPage1IndexRoute,
  AuthenticatedSenseManagementPage1IndexRoute:
    AuthenticatedSenseManagementPage1IndexRoute,
  AuthenticatedVisionMixinPage1IndexRoute:
    AuthenticatedVisionMixinPage1IndexRoute,
};

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren);

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  errorNotFoundRoute: errorNotFoundRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
